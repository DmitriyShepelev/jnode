<?xml version="1.0" encoding="UTF-8"?>
<!--
    $Id$

    Copyright (C) 2003-2015 JNode.org

    This library is free software; you can redistribute it and/or modify it
    under the terms of the GNU Lesser General Public License as published
    by the Free Software Foundation; either version 2.1 of the License, or
    (at your option) any later version.

    This library is distributed in the hope that it will be useful, but
    WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY
    or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public
    License for more details.

    You should have received a copy of the GNU Lesser General Public License
    along with this library; If not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
-->
<!-- Ant lib for various common tasks -->
<antlib>
    <presetdef name="jsr308.javac">
        <javac fork="yes" executable="${checkerframework}/checker/bin/${cfJavac}" >
            <compilerarg value="-version"/>
            <compilerarg value="-implicit:class"/>
        </javac>
    </presetdef>
  <!-- Predefined way of using javac -->
  <presetdef name="jnode.compile">
    <jsr308.javac destdir="${my-classes.dir}"
	       debug="on"
	       optimize="on"
           memoryMaximumSize="${memoryMaximumSize}"
           compiler="modern"
	       includeJavaRuntime="false"
           target="${java.target}"
           source="${java.source}"
           encoding="${java.encoding}"
           excludes="**/*-template.java,**/package-info.java">
        <compilerarg line="-processor org.checkerframework.checker.nullness.NullnessChecker"/>
        <!-- optional, to not check uses of library methods:
          <compilerarg value="-AskipUses=^(java\.awt\.|javax\.swing\.)"/>
        -->
        <compilerarg line="-Xmaxerrs 10000"/>
	  <bootclasspath path="${jnode-core.jar}"/>
      <compilerarg value="${compilerarg}"/>
    </jsr308.javac>
  </presetdef>
  
  <presetdef name="jnode.compile.test">
    <javac destdir="${my-testclasses.dir}"
	       debug="on"
	       optimize="on"
           fork="on"
           memoryMaximumSize="${memoryMaximumSize}"
           compiler="modern"
	       includeJavaRuntime="false"
           target="${java.target}"
           source="${java.source}"
           encoding="${java.encoding}"
           excludes="**/*-template.java,**/package-info.java">
	  <bootclasspath path="${jnode-core.jar}"/>
	  <classpath path="${my-classes.dir}"/>
	  <compilerarg value="${compilerarg}"/>
    </javac>
  </presetdef>
  
  <!-- Predefined way of using javadoc -->
  <macrodef name="jnode.javadoc">
    <attribute name="destdir"/>
    <element name="parameters" implicit="true"/>

    <sequential>
      <mkdir dir="@{destdir}"/>
      <javadoc
      	destdir="@{destdir}"
		author="true"
		version="true"
		use="true"
		windowtitle="JNode"
		maxmemory="256M">

		<parameters/>
		<classpath refid="cp" />
		<group title="JNode" packages="org.jnode.*,org.vmmagic.*" />
		<group title="Classpath" packages="java.*,javax.*,gnu.*" />
		<group title="MMTk" packages="org.mmtk.*" />
		<!-- link href="http://jnode.org"/ -->
      </javadoc>
    </sequential>
  </macrodef>

  <!-- Copy descriptors to the descriptors directory -->
  <presetdef name="jnode.copy-descriptors">
    <copy todir="${descriptors.dir}">
      <fileset dir="${basedir}/descriptors"/>
      <filterset refid="descriptors-filter"/>
    </copy>
  </presetdef>

  <!-- Perform a default clean -->
  <presetdef name="jnode.clean">
    <delete dir="${my-build.dir}" quiet="true"/>
  </presetdef>

  <!-- Call all subprojects with a specific target -->
  <macrodef name="jnode.antall">
    <attribute name="target"/>
    <sequential>
		<ant target="@{target}" dir="${root.dir}/core" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/shell" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/net" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/fs" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/builder" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/gui" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/textui" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/distr" inheritall="on" inheritrefs="on" />
		<ant target="@{target}" dir="${root.dir}/cli" inheritall="on" inheritrefs="on" />
    </sequential>
  </macrodef>

</antlib>
